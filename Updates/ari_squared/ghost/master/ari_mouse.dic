//---------------------------Mouse Functions--------------------------

//--OnMouseMove

OnMouseMove
 {
		
		if reference3 == 0 
		{
			
			MouseMoveSakura
		}
		else 
		{
			
			MouseMoveKero
		}
 }
 
 //--MouseMoveSakura
 
MouseMoveSakura
 {
	if reference4 != "" 
 	{
 		stroke++ 
 		if stroke >= 40 
		{
 			stroke = 0 
			if reference4 == "Head" 
 			{
				"\0\s[1]Oh, uhm! Thanks?? I think???\e"
				"\0\s[3]Wow, uhm. I knew my hair was fluffy, but you seem to \f[italic,true]really\f[italic,false] like touching it.\e"
				"\0\s[5]Floof.\e"
 			}
 			elseif reference4 == "Face" 
 			{
 				"\0\s[0]This is petting dialogue for my face.\e"
 				"\0\s[0]This is more petting dialogue for my face.\e"
 				"\0\s[0]This is another bit of petting dialogue for my face. Well, stroking would probably be more accurate.\e"
 			}
			
 		}
	}
 	else
	{
 		
		stroke = 0
 	}
}

 //---- MouseMoveKero -----------------------------------------------------------------
 //MouseMoveKero is exactly like the above, except set up for your second character. 
 
MouseMoveKero
 {
	if reference4 != ""
 	{
 		stroke++
 		if stroke >= 40
		{
			stroke = 0
			if reference4 == "Face" //Put in the name of your collision area you set up for your secondary character here.
 			{
				"\1\s[10]This is a face touching dialogue.\e"
				"\1\s[10]This is another face touching dialogue.\e"
				"\1\s[10]This is yet another face touching dialogue.\e"
 			}
			elseif reference4 == "Point" //Like above, put in the name of another collision you set up in surfaces.txt for the secondary character.
			{
				"\1\s[10]This is a point touching dialogue since I don't really have a head, being a triangle.\e"
				"\1\s[10]This is another point touching dialogue.\e"
				"\1\s[10]This is yet another point touching dialogue.\e"
			}	
 		}
	}
 	else
	{
 		// If the mouse isn't over the ghost, it'll zero out the stroke value.
		stroke = 0
 	}
}

//---- OnMouseDoubleClick -------------------------------------------------------
//This is set up much like OnMouseMove above, except this is checking to see if the user is double clicking on the ghost. You also don't need to touch any of this. 
//Advanced users adding a third character, the same principles from OnMouseMove apply here as well! Make sure to add an elseif with the right number for your third character.

OnMouseDoubleClick
 {
	//---- like with the OnMouseMove function above, this determines who the user is clicking on.
	if reference5 == 0 //checks which button is being used for the click
	{
	 	if reference3 == 0 //if the character is 0, aka your main character
		{
		MouseDoubleClickSakura
		}
		else
		{
 		MouseDoubleClickKero
		}
	}
 }

 //---- MouseDoubleClickSakura ----------------------------------------------------------
 //Like the petting animation above, this is the reactions they have to being double clicked. These also rely on the collisions you set up in surfaces.txt!
 
 //*********************Advanced User Info*******************************
 //If you don't want your character to be hittable at all, you can just delete everything in MouseDoubleClickSakura except OpenSakuraMenu. So it'd look like
 
 //MouseDoubleClickSakura
 //{
 //OpenSakuraMenu
 //}
 
 //This method also applies to the secondary character, Kero, below this set.
 //***********************************************************************
 
MouseDoubleClickSakura
 {
 	if reference4 == "Head" || reference4 == "Face" //here, this is checking to see if the user is double clicking on either the character's head OR their face, which for our purposes means they're hitting the ghost.
	{
		"\0\s[0]This is the hitting dialogue.\w8\1\s[15]lol\w8\0\s[9]\n\n[half]Shut up.\e"
		"\0\s[0]This is another hitting dialogue.\e"
		"\0\s[0]This is yet another bit of text for hitting.\e"
		"\0\s[0]This is the fourth hitting dialogue.\e"
 	}
	else
 	{
		//Otherwise, if the user doubleclicks somewhere else on the character, they will open their menu as detailed in menu.dic.
 		OpenSakuraMenu
	}
 }

 
 //---- MouseDoubleClickKero -----------------------------------------------------------
 //This is just the same as MouseDoubleClickSakura above, except for your secondary character. The same principles apply, including how to make your character unhittable.
 
 
MouseDoubleClickKero
 {
 	if reference4 == "Face"
	{
		"\1\s[10]This is hitting dialogue.\w8\0\s[5]ha ha\w8\1\s[19]\n\n[half]Quiet.\e"
		"\1\s[10]This is another hit dialogue.\e"
		"\1\s[10]This is yet another hit dialogue.\e"
		"\1\s[10]This is the fourth hitting dialogue.\e"
 	}
	else //Otherwise if you click anywhere else on Triangle's body
 	{
		OpenKeroMenu //This will open his menu set up in menu.dic.
	}
 }